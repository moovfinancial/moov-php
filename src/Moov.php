<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp;



/**
 * Moov - Moov API: Moov is a platform that enables developers to integrate all aspects of money movement with ease and speed.
 *
 * The Moov API makes it simple for platforms to send, receive, and store money. Our API is based upon REST
 * principles, returns JSON responses, and uses standard HTTP response codes. To learn more about how Moov
 * works at a high level, read our [concepts](https://docs.moov.io/guides/get-started/glossary/) guide.
 */
class Moov
{
    public const SERVERS = [
        /** Production API host */
        'https://api.moov.io',
    ];

    public Accounts $accounts;

    public Adjustments $adjustments;

    public ApplePay $applePay;

    public BankAccounts $bankAccounts;

    public Branding $branding;

    public Capabilities $capabilities;

    public Cards $cards;

    public Disputes $disputes;

    public FeePlans $feePlans;

    public Files $files;

    public PaymentLinks $paymentLinks;

    public PaymentMethods $paymentMethods;

    public Representatives $representatives;

    public Scheduling $scheduling;

    public Schedules $schedules;

    public Sweeps $sweeps;

    public Transfers $transfers;

    public Underwriting $underwriting;

    public Wallets $wallets;

    public WalletTransactions $walletTransactions;

    public Avatars $avatars;

    public EndToEndEncryption $endToEndEncryption;

    public Enrichment $enrichment;

    public EnrichedProfile $enrichedProfile;

    public Industries $industries;

    public Institutions $institutions;

    public IssuingTransactions $issuingTransactions;

    public Transactions $transactions;

    public CardIssuing $cardIssuing;

    public IssuedCards $issuedCards;

    public Authentication $authentication;

    public OnboardingInvites $onboardingInvites;

    public Onboarding $onboarding;

    public Ping $ping;

    public TerminalApplications $terminalApplications;

    /**
     * Returns a new instance of the SDK builder used to configure and create the SDK instance.
     *
     * @return MoovBuilder
     */
    public static function builder(): MoovBuilder
    {
        return new MoovBuilder();
    }

    /**
     * @param  SDKConfiguration  $sdkConfiguration
     */
    public function __construct(
        public SDKConfiguration $sdkConfiguration,
    ) {
        $this->accounts = new Accounts($this->sdkConfiguration);
        $this->adjustments = new Adjustments($this->sdkConfiguration);
        $this->applePay = new ApplePay($this->sdkConfiguration);
        $this->bankAccounts = new BankAccounts($this->sdkConfiguration);
        $this->branding = new Branding($this->sdkConfiguration);
        $this->capabilities = new Capabilities($this->sdkConfiguration);
        $this->cards = new Cards($this->sdkConfiguration);
        $this->disputes = new Disputes($this->sdkConfiguration);
        $this->feePlans = new FeePlans($this->sdkConfiguration);
        $this->files = new Files($this->sdkConfiguration);
        $this->paymentLinks = new PaymentLinks($this->sdkConfiguration);
        $this->paymentMethods = new PaymentMethods($this->sdkConfiguration);
        $this->representatives = new Representatives($this->sdkConfiguration);
        $this->scheduling = new Scheduling($this->sdkConfiguration);
        $this->schedules = new Schedules($this->sdkConfiguration);
        $this->sweeps = new Sweeps($this->sdkConfiguration);
        $this->transfers = new Transfers($this->sdkConfiguration);
        $this->underwriting = new Underwriting($this->sdkConfiguration);
        $this->wallets = new Wallets($this->sdkConfiguration);
        $this->walletTransactions = new WalletTransactions($this->sdkConfiguration);
        $this->avatars = new Avatars($this->sdkConfiguration);
        $this->endToEndEncryption = new EndToEndEncryption($this->sdkConfiguration);
        $this->enrichment = new Enrichment($this->sdkConfiguration);
        $this->enrichedProfile = new EnrichedProfile($this->sdkConfiguration);
        $this->industries = new Industries($this->sdkConfiguration);
        $this->institutions = new Institutions($this->sdkConfiguration);
        $this->issuingTransactions = new IssuingTransactions($this->sdkConfiguration);
        $this->transactions = new Transactions($this->sdkConfiguration);
        $this->cardIssuing = new CardIssuing($this->sdkConfiguration);
        $this->issuedCards = new IssuedCards($this->sdkConfiguration);
        $this->authentication = new Authentication($this->sdkConfiguration);
        $this->onboardingInvites = new OnboardingInvites($this->sdkConfiguration);
        $this->onboarding = new Onboarding($this->sdkConfiguration);
        $this->ping = new Ping($this->sdkConfiguration);
        $this->terminalApplications = new TerminalApplications($this->sdkConfiguration);
        $this->sdkConfiguration->client = $this->sdkConfiguration->initHooks($this->sdkConfiguration->client);

    }
}