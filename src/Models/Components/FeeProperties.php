<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Components;


/** FeeProperties - Defines the specific parameters used for fee calculation. */
class FeeProperties
{
    /**
     * A fixed fee that is applied to the amount of each transaction in the `fixed` and `blended` fee models.
     *
     * @var ?AmountDecimal $fixedAmount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fixedAmount')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\AmountDecimal|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AmountDecimal $fixedAmount = null;

    /**
     * A percentage fee that is applied to the amount of each transaction in the `blended` fee model, expressed as a decimal. 
     *
     *
     * For example, 0.05% is '0.05'.
     *
     * @var ?string $variableRate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('variableRate')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $variableRate = null;

    /**
     * Specifies the minimum allowable spending for a single transaction, working as a transaction floor.
     *
     * @var ?AmountDecimal $minPerTransaction
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('minPerTransaction')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\AmountDecimal|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AmountDecimal $minPerTransaction = null;

    /**
     * Specifies the maximum allowable spending for a single transaction, working as a transaction ceiling.
     *
     * @var ?AmountDecimal $maxPerTransaction
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('maxPerTransaction')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\AmountDecimal|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AmountDecimal $maxPerTransaction = null;

    /**
     * @param  ?AmountDecimal  $fixedAmount
     * @param  ?string  $variableRate
     * @param  ?AmountDecimal  $minPerTransaction
     * @param  ?AmountDecimal  $maxPerTransaction
     * @phpstan-pure
     */
    public function __construct(?AmountDecimal $fixedAmount = null, ?string $variableRate = null, ?AmountDecimal $minPerTransaction = null, ?AmountDecimal $maxPerTransaction = null)
    {
        $this->fixedAmount = $fixedAmount;
        $this->variableRate = $variableRate;
        $this->minPerTransaction = $minPerTransaction;
        $this->maxPerTransaction = $maxPerTransaction;
    }
}