<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Components;


class IssuingControls
{
    /**
     * Indicates if the card is single-use. If true, the card closes after the first authorization.
     *
     * @var ?bool $singleUse
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('singleUse')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $singleUse = null;

    /**
     * Sets the spending limit per time interval. Only one limit per interval is supported.
     *
     * @var ?array<IssuingVelocityLimit> $velocityLimits
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('velocityLimits')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Moov\MoovPhp\Models\Components\IssuingVelocityLimit>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $velocityLimits = null;

    /**
     * @param  ?bool  $singleUse
     * @param  ?array<IssuingVelocityLimit>  $velocityLimits
     * @phpstan-pure
     */
    public function __construct(?bool $singleUse = null, ?array $velocityLimits = null)
    {
        $this->singleUse = $singleUse;
        $this->velocityLimits = $velocityLimits;
    }
}