<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Components;


/** CardTransactionDetails - Card-specific details about the transaction. */
class CardTransactionDetails
{
    /**
     * Status of a transaction within the card payment lifecycle.
     *
     * @var CardTransactionStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\CardTransactionStatus')]
    public CardTransactionStatus $status;

    /**
     *
     * @var ?CardTransactionFailureCode $failureCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('failureCode')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\CardTransactionFailureCode|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CardTransactionFailureCode $failureCode = null;

    /**
     * An optional override of the default card statement descriptor for a transfer. Accounts must be enabled by Moov to set this field.
     *
     * @var ?string $dynamicDescriptor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('dynamicDescriptor')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $dynamicDescriptor = null;

    /**
     * Specifies the nature and initiator of a transaction. 
     *
     *
     * Crucial for recurring and merchant-initiated transactions as per card scheme rules. 
     * Omit for customer-initiated e-commerce transactions.
     *
     * @var ?TransactionSource $transactionSource
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transactionSource')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\TransactionSource|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?TransactionSource $transactionSource = null;

    /**
     *
     * @var ?\DateTime $initiatedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('initiatedOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $initiatedOn = null;

    /**
     *
     * @var ?\DateTime $confirmedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('confirmedOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $confirmedOn = null;

    /**
     *
     * @var ?\DateTime $settledOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('settledOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $settledOn = null;

    /**
     *
     * @var ?\DateTime $failedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('failedOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $failedOn = null;

    /**
     *
     * @var ?\DateTime $canceledOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('canceledOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $canceledOn = null;

    /**
     *
     * @var ?\DateTime $completedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('completedOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $completedOn = null;

    /**
     * The program assigned by the card network that determines the interchange rate for the transfer.
     *
     * @var ?string $interchangeQualification
     * @deprecated  field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('interchangeQualification')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $interchangeQualification = null;

    /**
     * The program assigned by the card network that determines the interchange rate for the transfer.
     *
     * @var ?string $feeProgram
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('feeProgram')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $feeProgram = null;

    /**
     * An alphanumeric code generated by the card network to demonstrate approval for the transaction.
     *
     * @var ?string $authorizationCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authorizationCode')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $authorizationCode = null;

    /**
     * @param  CardTransactionStatus  $status
     * @param  ?CardTransactionFailureCode  $failureCode
     * @param  ?string  $dynamicDescriptor
     * @param  ?TransactionSource  $transactionSource
     * @param  ?\DateTime  $initiatedOn
     * @param  ?\DateTime  $confirmedOn
     * @param  ?\DateTime  $settledOn
     * @param  ?\DateTime  $failedOn
     * @param  ?\DateTime  $canceledOn
     * @param  ?\DateTime  $completedOn
     * @param  ?string  $interchangeQualification
     * @param  ?string  $feeProgram
     * @param  ?string  $authorizationCode
     * @phpstan-pure
     */
    public function __construct(CardTransactionStatus $status, ?CardTransactionFailureCode $failureCode = null, ?string $dynamicDescriptor = null, ?TransactionSource $transactionSource = null, ?\DateTime $initiatedOn = null, ?\DateTime $confirmedOn = null, ?\DateTime $settledOn = null, ?\DateTime $failedOn = null, ?\DateTime $canceledOn = null, ?\DateTime $completedOn = null, ?string $interchangeQualification = null, ?string $feeProgram = null, ?string $authorizationCode = null)
    {
        $this->status = $status;
        $this->failureCode = $failureCode;
        $this->dynamicDescriptor = $dynamicDescriptor;
        $this->transactionSource = $transactionSource;
        $this->initiatedOn = $initiatedOn;
        $this->confirmedOn = $confirmedOn;
        $this->settledOn = $settledOn;
        $this->failedOn = $failedOn;
        $this->canceledOn = $canceledOn;
        $this->completedOn = $completedOn;
        $this->interchangeQualification = $interchangeQualification;
        $this->feeProgram = $feeProgram;
        $this->authorizationCode = $authorizationCode;
    }
}