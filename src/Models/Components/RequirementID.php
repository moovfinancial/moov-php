<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Components;


/** The unique ID of what the requirement is asking to be filled out. */
enum RequirementID: string
{
    case AccountTosAcceptance = 'account.tos-acceptance';
    case IndividualMobile = 'individual.mobile';
    case IndividualEmail = 'individual.email';
    case IndividualEmailOrMobile = 'individual.email-or-mobile';
    case IndividualFirstname = 'individual.firstname';
    case IndividualLastname = 'individual.lastname';
    case IndividualAddress = 'individual.address';
    case IndividualSsnLast4 = 'individual.ssn-last4';
    case IndividualSsn = 'individual.ssn';
    case IndividualBirthdate = 'individual.birthdate';
    case BusinessLegalname = 'business.legalname';
    case BusinessDescriptionOrWebsite = 'business.description-or-website';
    case BusinessEntityType = 'business.entity-type';
    case BusinessBusinessType = 'business.business-type';
    case BusinessDba = 'business.dba';
    case BusinessEin = 'business.ein';
    case BusinessAddress = 'business.address';
    case BusinessPhone = 'business.phone';
    case BusinessAdmins = 'business.admins';
    case BusinessControllers = 'business.controllers';
    case BusinessOwners = 'business.owners';
    case BusinessClassification = 'business.classification';
    case BusinessIndustryCodeMcc = 'business.industry-code-mcc';
    case BusinessIndustry = 'business.industry';
    case BusinessIndicateOwnersProvided = 'business.indicate-owners-provided';
    case BusinessAverageTransactionSize = 'business.average-transaction-size';
    case BusinessMaxTransactionSize = 'business.max-transaction-size';
    case BusinessAverageMonthlyTransactionVolume = 'business.average-monthly-transaction-volume';
    case BusinessVolumeByCustomerType = 'business.volume-by-customer-type';
    case BusinessCardVolumeDistribution = 'business.card-volume-distribution';
    case BusinessFulfillment = 'business.fulfillment';
    case BusinessDescription = 'business.description';
    case BusinessUnderwritingDocumentsTierOne = 'business.underwriting-documents-tier-one';
    case BankAccountsName = 'bank-accounts.name';
    case BankAccountsRoutingNumber = 'bank-accounts.routing-number';
    case BankAccountsAccountNumber = 'bank-accounts.account-number';
    case DocumentBusinessVerification = 'document.business.verification';
    case DocumentIndividualTin = 'document.individual.tin';
    case DocumentIndividualVerification = 'document.individual.verification';
    case DocumentRepresentativeRepUuidTin = 'document.representative.{rep-uuid}.tin';
    case DocumentRepresentativeRepUuidVerification = 'document.representative.{rep-uuid}.verification';
    case RepresentativeRepUuidMobile = 'representative.{rep-uuid}.mobile';
    case RepresentativeRepUuidEmail = 'representative.{rep-uuid}.email';
    case RepresentativeRepUuidEmailOrMobile = 'representative.{rep-uuid}.email-or-mobile';
    case RepresentativeRepUuidFirstname = 'representative.{rep-uuid}.firstname';
    case RepresentativeRepUuidLastname = 'representative.{rep-uuid}.lastname';
    case RepresentativeRepUuidAddress = 'representative.{rep-uuid}.address';
    case RepresentativeRepUuidSsnLast4 = 'representative.{rep-uuid}.ssn-last4';
    case RepresentativeRepUuidSsn = 'representative.{rep-uuid}.ssn';
    case RepresentativeRepUuidBirthdate = 'representative.{rep-uuid}.birthdate';
    case RepresentativeRepUuidJobTitle = 'representative.{rep-uuid}.job-title';
    case RepresentativeRepUuidIsController = 'representative.{rep-uuid}.is-controller';
    case RepresentativeRepUuidIsOwner = 'representative.{rep-uuid}.is-owner';
    case RepresentativeRepUuidOwnership = 'representative.{rep-uuid}.ownership';
    case DocumentDocUuid = 'document.{doc-uuid}';
    case UnderwritingBusinessPresence = 'underwriting.businessPresence';
    case UnderwritingGeographicReach = 'underwriting.geographicReach';
    case UnderwritingVolumeShareByCustomerType = 'underwriting.volumeShareByCustomerType';
    case UnderwritingPendingLitigation = 'underwriting.pendingLitigation';
    case UnderwritingDocumentsProcessingStatementsPast3Months = 'underwriting.documents.processingStatementsPast3Months';
    case UnderwritingCollectFundsCardPaymentsCardAcceptanceMethods = 'underwriting.collectFunds.cardPayments.cardAcceptanceMethods';
    case UnderwritingCollectFundsCardPaymentsCurrentlyAcceptsCards = 'underwriting.collectFunds.cardPayments.currentlyAcceptsCards';
    case UnderwritingCollectFundsCardPaymentsEstimatedActivityAverageTransactionAmount = 'underwriting.collectFunds.cardPayments.estimatedActivity.averageTransactionAmount';
    case UnderwritingCollectFundsCardPaymentsEstimatedActivityMaximumTransactionAmount = 'underwriting.collectFunds.cardPayments.estimatedActivity.maximumTransactionAmount';
    case UnderwritingCollectFundsCardPaymentsEstimatedActivityMonthlyVolumeRange = 'underwriting.collectFunds.cardPayments.estimatedActivity.monthlyVolumeRange';
    case UnderwritingCollectFundsCardPaymentsFulfillment = 'underwriting.collectFunds.cardPayments.fulfillment';
    case UnderwritingCollectFundsCardPaymentsRefundPolicy = 'underwriting.collectFunds.cardPayments.refundPolicy';
    case UnderwritingCollectFundsAchCardAcceptanceMethods = 'underwriting.collectFunds.ach.cardAcceptanceMethods';
    case UnderwritingCollectFundsAchCurrentlyAcceptsCards = 'underwriting.collectFunds.ach.currentlyAcceptsCards';
    case UnderwritingCollectFundsAchEstimatedActivityAverageTransactionAmount = 'underwriting.collectFunds.ach.estimatedActivity.averageTransactionAmount';
    case UnderwritingCollectFundsAchEstimatedActivityMaximumTransactionAmount = 'underwriting.collectFunds.ach.estimatedActivity.maximumTransactionAmount';
    case UnderwritingCollectFundsAchEstimatedActivityMonthlyVolumeRange = 'underwriting.collectFunds.ach.estimatedActivity.monthlyVolumeRange';
    case UnderwritingCollectFundsAchFulfillment = 'underwriting.collectFunds.ach.fulfillment';
    case UnderwritingCollectFundsAchRefundPolicy = 'underwriting.collectFunds.ach.refundPolicy';
    case UnderwritingSendFundsAchCardAcceptanceMethods = 'underwriting.sendFunds.ach.cardAcceptanceMethods';
    case UnderwritingSendFundsAchCurrentlyAcceptsCards = 'underwriting.sendFunds.ach.currentlyAcceptsCards';
    case UnderwritingSendFundsAchEstimatedActivityAverageTransactionAmount = 'underwriting.sendFunds.ach.estimatedActivity.averageTransactionAmount';
    case UnderwritingSendFundsAchEstimatedActivityMaximumTransactionAmount = 'underwriting.sendFunds.ach.estimatedActivity.maximumTransactionAmount';
    case UnderwritingSendFundsAchEstimatedActivityMonthlyVolumeRange = 'underwriting.sendFunds.ach.estimatedActivity.monthlyVolumeRange';
    case UnderwritingSendFundsAchFulfillment = 'underwriting.sendFunds.ach.fulfillment';
    case UnderwritingSendFundsAchRefundPolicy = 'underwriting.sendFunds.ach.refundPolicy';
    case UnderwritingSendFundsRtpCardAcceptanceMethods = 'underwriting.sendFunds.rtp.cardAcceptanceMethods';
    case UnderwritingSendFundsRtpCurrentlyAcceptsCards = 'underwriting.sendFunds.rtp.currentlyAcceptsCards';
    case UnderwritingSendFundsRtpEstimatedActivityAverageTransactionAmount = 'underwriting.sendFunds.rtp.estimatedActivity.averageTransactionAmount';
    case UnderwritingSendFundsRtpEstimatedActivityMaximumTransactionAmount = 'underwriting.sendFunds.rtp.estimatedActivity.maximumTransactionAmount';
    case UnderwritingSendFundsRtpEstimatedActivityMonthlyVolumeRange = 'underwriting.sendFunds.rtp.estimatedActivity.monthlyVolumeRange';
    case UnderwritingSendFundsRtpFulfillment = 'underwriting.sendFunds.rtp.fulfillment';
    case UnderwritingSendFundsRtpRefundPolicy = 'underwriting.sendFunds.rtp.refundPolicy';
    case UnderwritingSendFundsPushToCardCardAcceptanceMethods = 'underwriting.sendFunds.pushToCard.cardAcceptanceMethods';
    case UnderwritingSendFundsPushToCardCurrentlyAcceptsCards = 'underwriting.sendFunds.pushToCard.currentlyAcceptsCards';
    case UnderwritingSendFundsPushToCardEstimatedActivityAverageTransactionAmount = 'underwriting.sendFunds.pushToCard.estimatedActivity.averageTransactionAmount';
    case UnderwritingSendFundsPushToCardEstimatedActivityMaximumTransactionAmount = 'underwriting.sendFunds.pushToCard.estimatedActivity.maximumTransactionAmount';
    case UnderwritingSendFundsPushToCardEstimatedActivityMonthlyVolumeRange = 'underwriting.sendFunds.pushToCard.estimatedActivity.monthlyVolumeRange';
    case UnderwritingSendFundsPushToCardFulfillment = 'underwriting.sendFunds.pushToCard.fulfillment';
    case UnderwritingSendFundsPushToCardRefundPolicy = 'underwriting.sendFunds.pushToCard.refundPolicy';
    case UnderwritingMoneyTransferPullFromCardCardAcceptanceMethods = 'underwriting.moneyTransfer.pullFromCard.cardAcceptanceMethods';
    case UnderwritingMoneyTransferPullFromCardCurrentlyAcceptsCards = 'underwriting.moneyTransfer.pullFromCard.currentlyAcceptsCards';
    case UnderwritingMoneyTransferPullFromCardEstimatedActivityAverageTransactionAmount = 'underwriting.moneyTransfer.pullFromCard.estimatedActivity.averageTransactionAmount';
    case UnderwritingMoneyTransferPullFromCardEstimatedActivityMaximumTransactionAmount = 'underwriting.moneyTransfer.pullFromCard.estimatedActivity.maximumTransactionAmount';
    case UnderwritingMoneyTransferPullFromCardEstimatedActivityMonthlyVolumeRange = 'underwriting.moneyTransfer.pullFromCard.estimatedActivity.monthlyVolumeRange';
    case UnderwritingMoneyTransferPullFromCardFulfillment = 'underwriting.moneyTransfer.pullFromCard.fulfillment';
    case UnderwritingMoneyTransferPullFromCardRefundPolicy = 'underwriting.moneyTransfer.pullFromCard.refundPolicy';
    case UnderwritingMoneyTransferPushToCardCardAcceptanceMethods = 'underwriting.moneyTransfer.pushToCard.cardAcceptanceMethods';
    case UnderwritingMoneyTransferPushToCardCurrentlyAcceptsCards = 'underwriting.moneyTransfer.pushToCard.currentlyAcceptsCards';
    case UnderwritingMoneyTransferPushToCardEstimatedActivityAverageTransactionAmount = 'underwriting.moneyTransfer.pushToCard.estimatedActivity.averageTransactionAmount';
    case UnderwritingMoneyTransferPushToCardEstimatedActivityMaximumTransactionAmount = 'underwriting.moneyTransfer.pushToCard.estimatedActivity.maximumTransactionAmount';
    case UnderwritingMoneyTransferPushToCardEstimatedActivityMonthlyVolumeRange = 'underwriting.moneyTransfer.pushToCard.estimatedActivity.monthlyVolumeRange';
    case UnderwritingMoneyTransferPushToCardFulfillment = 'underwriting.moneyTransfer.pushToCard.fulfillment';
    case UnderwritingMoneyTransferPushToCardRefundPolicy = 'underwriting.moneyTransfer.pushToCard.refundPolicy';
}
