<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Components;


/** PaymentMethodsBankAccount - A bank account as contained within a payment method. */
class PaymentMethodsBankAccount
{
    /**
     *
     * @var string $bankAccountID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('bankAccountID')]
    public string $bankAccountID;

    /**
     * Once the bank account is linked, we don't reveal the full bank account number.
     *
     *
     * The fingerprint acts as a way to identify whether two linked bank accounts are the same.
     *
     * @var string $fingerprint
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fingerprint')]
    public string $fingerprint;

    /**
     *
     * @var BankAccountStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\BankAccountStatus')]
    public BankAccountStatus $status;

    /**
     *
     * @var string $holderName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('holderName')]
    public string $holderName;

    /**
     * The type of holder on a funding source.
     *
     * @var BankAccountHolderType $holderType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('holderType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\BankAccountHolderType')]
    public BankAccountHolderType $holderType;

    /**
     *
     * @var string $bankName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('bankName')]
    public string $bankName;

    /**
     * The bank account type.
     *
     * @var BankAccountType $bankAccountType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('bankAccountType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\BankAccountType')]
    public BankAccountType $bankAccountType;

    /**
     *
     * @var string $routingNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('routingNumber')]
    public string $routingNumber;

    /**
     *
     * @var string $lastFourAccountNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lastFourAccountNumber')]
    public string $lastFourAccountNumber;

    /**
     *
     * @var \DateTime $updatedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updatedOn')]
    public \DateTime $updatedOn;

    /**
     * @param  string  $bankAccountID
     * @param  string  $fingerprint
     * @param  BankAccountStatus  $status
     * @param  string  $holderName
     * @param  BankAccountHolderType  $holderType
     * @param  string  $bankName
     * @param  BankAccountType  $bankAccountType
     * @param  string  $routingNumber
     * @param  string  $lastFourAccountNumber
     * @param  \DateTime  $updatedOn
     * @phpstan-pure
     */
    public function __construct(string $bankAccountID, string $fingerprint, BankAccountStatus $status, string $holderName, BankAccountHolderType $holderType, string $bankName, BankAccountType $bankAccountType, string $routingNumber, string $lastFourAccountNumber, \DateTime $updatedOn)
    {
        $this->bankAccountID = $bankAccountID;
        $this->fingerprint = $fingerprint;
        $this->status = $status;
        $this->holderName = $holderName;
        $this->holderType = $holderType;
        $this->bankName = $bankName;
        $this->bankAccountType = $bankAccountType;
        $this->routingNumber = $routingNumber;
        $this->lastFourAccountNumber = $lastFourAccountNumber;
        $this->updatedOn = $updatedOn;
    }
}