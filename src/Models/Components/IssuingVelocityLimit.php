<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Components;


class IssuingVelocityLimit
{
    /**
     * The maximum amount in cents that can be spent in a given interval.
     *
     * @var int $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public int $amount;

    /**
     * Specifies the time frame for the velocity limit. Currently supports only per-transaction limits.
     *
     * @var IssuingIntervalLimit $interval
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('interval')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\IssuingIntervalLimit')]
    public IssuingIntervalLimit $interval;

    /**
     * @param  int  $amount
     * @param  IssuingIntervalLimit  $interval
     * @phpstan-pure
     */
    public function __construct(int $amount, IssuingIntervalLimit $interval)
    {
        $this->amount = $amount;
        $this->interval = $interval;
    }
}