<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Components;


class Capability
{
    /**
     * Moov account capabilities.
     *
     *
     * The `production-app` capability might appear in your list. This is a read-only capability that Moov requests and uses for account verification purposes. The capability remains active with your account and requires no additional action.
     *
     * @var CapabilityID $capability
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('capability')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\CapabilityID')]
    public CapabilityID $capability;

    /**
     *
     * @var string $accountID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('accountID')]
    public string $accountID;

    /**
     * The status of the capability requested for an account.
     *
     * @var CapabilityStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\CapabilityStatus')]
    public CapabilityStatus $status;

    /**
     *
     * @var \DateTime $createdOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdOn')]
    public \DateTime $createdOn;

    /**
     *
     * @var \DateTime $updatedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updatedOn')]
    public \DateTime $updatedOn;

    /**
     * Represents individual and business data necessary to facilitate the enabling of a capability for an account.
     *
     * @var ?CapabilityRequirement $requirements
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('requirements')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\CapabilityRequirement|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CapabilityRequirement $requirements = null;

    /**
     *
     * @var ?string $disabledReason
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('disabledReason')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $disabledReason = null;

    /**
     *
     * @var ?\DateTime $disabledOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('disabledOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $disabledOn = null;

    /**
     * @param  CapabilityID  $capability
     * @param  string  $accountID
     * @param  CapabilityStatus  $status
     * @param  \DateTime  $createdOn
     * @param  \DateTime  $updatedOn
     * @param  ?CapabilityRequirement  $requirements
     * @param  ?string  $disabledReason
     * @param  ?\DateTime  $disabledOn
     * @phpstan-pure
     */
    public function __construct(CapabilityID $capability, string $accountID, CapabilityStatus $status, \DateTime $createdOn, \DateTime $updatedOn, ?CapabilityRequirement $requirements = null, ?string $disabledReason = null, ?\DateTime $disabledOn = null)
    {
        $this->capability = $capability;
        $this->accountID = $accountID;
        $this->status = $status;
        $this->createdOn = $createdOn;
        $this->updatedOn = $updatedOn;
        $this->requirements = $requirements;
        $this->disabledReason = $disabledReason;
        $this->disabledOn = $disabledOn;
    }
}