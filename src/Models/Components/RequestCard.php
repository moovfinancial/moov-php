<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Components;


class RequestCard
{
    /**
     *
     * @var string $fundingWalletID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fundingWalletID')]
    public string $fundingWalletID;

    /**
     * Fields for identifying an authorized individual.
     *
     * @var CreateAuthorizedUser $authorizedUser
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authorizedUser')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\CreateAuthorizedUser')]
    public CreateAuthorizedUser $authorizedUser;

    /**
     * Specifies the type of spend card to be issued. Presently supports virtual only, providing a digital number without a physical card.
     *
     * @var IssuedCardFormFactor $formFactor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('formFactor')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\IssuedCardFormFactor')]
    public IssuedCardFormFactor $formFactor;

    /**
     * An optional descriptive name for the card.
     *
     * @var ?string $memo
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('memo')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $memo = null;

    /**
     * The expiration date of the card or token.
     *
     * @var ?CardExpiration $expiration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expiration')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\CardExpiration|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?CardExpiration $expiration = null;

    /**
     *
     * @var ?IssuingControls $controls
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('controls')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\IssuingControls|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?IssuingControls $controls = null;

    /**
     * @param  string  $fundingWalletID
     * @param  CreateAuthorizedUser  $authorizedUser
     * @param  IssuedCardFormFactor  $formFactor
     * @param  ?string  $memo
     * @param  ?CardExpiration  $expiration
     * @param  ?IssuingControls  $controls
     * @phpstan-pure
     */
    public function __construct(string $fundingWalletID, CreateAuthorizedUser $authorizedUser, IssuedCardFormFactor $formFactor, ?string $memo = null, ?CardExpiration $expiration = null, ?IssuingControls $controls = null)
    {
        $this->fundingWalletID = $fundingWalletID;
        $this->authorizedUser = $authorizedUser;
        $this->formFactor = $formFactor;
        $this->memo = $memo;
        $this->expiration = $expiration;
        $this->controls = $controls;
    }
}