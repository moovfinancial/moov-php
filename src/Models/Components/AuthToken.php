<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Components;


class AuthToken
{
    /**
     * Type of token returned.
     *
     *
     *   - `opaque`: A token following a proprietary format.
     *   - `jwt`: A JSON Web Token (JWT), a self-contained token that contains claims about the user and is cryptographically signed.
     *
     * @var TokenType $tokenType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('token_type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\TokenType')]
    public TokenType $tokenType;

    /**
     * A value passed to the authorization server to gain access to the system.
     *
     * @var string $accessToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('access_token')]
    public string $accessToken;

    /**
     * A value passed to the authorization server to obtain a new access token.
     *
     * @var string $refreshToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refresh_token')]
    public string $refreshToken;

    /**
     * Unix timestamp indicating when this token expires.
     *
     * @var int $expiresIn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expires_in')]
    public int $expiresIn;

    /**
     * A space-delimited list of [scopes](https://docs.moov.io/api/authentication/scopes/) that are allowed.
     *
     * @var string $scope
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('scope')]
    public string $scope;

    /**
     * @param  TokenType  $tokenType
     * @param  string  $accessToken
     * @param  string  $refreshToken
     * @param  int  $expiresIn
     * @param  string  $scope
     */
    public function __construct(TokenType $tokenType, string $accessToken, string $refreshToken, int $expiresIn, string $scope)
    {
        $this->tokenType = $tokenType;
        $this->accessToken = $accessToken;
        $this->refreshToken = $refreshToken;
        $this->expiresIn = $expiresIn;
        $this->scope = $scope;
    }
}