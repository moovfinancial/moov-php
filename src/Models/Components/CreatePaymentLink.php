<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Components;


/**
 * CreatePaymentLink - Request to create a new payment link.
 *
 *
 * A payment link must include either `payment` or `payout` details, but not both. For payout payment links,
 * `maxUses` will automatically be set to 1, as these are intended for a one-time disbursement
 * to a specific recipient.
 *
 * **Note:** The `payout` option is currently under development and is not yet available for general use.
 */
class CreatePaymentLink
{
    /**
     * The partner's Moov account ID.
     *
     * @var string $partnerAccountID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('partnerAccountID')]
    public string $partnerAccountID;

    /**
     * The merchant's preferred payment method ID. Must be a wallet payment method.
     *
     * @var string $merchantPaymentMethodID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('merchantPaymentMethodID')]
    public string $merchantPaymentMethodID;

    /**
     *
     * @var Amount $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\Amount')]
    public Amount $amount;

    /**
     * Customizable display options for a payment link.
     *
     * @var PaymentLinkDisplayOptions $display
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('display')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\PaymentLinkDisplayOptions')]
    public PaymentLinkDisplayOptions $display;

    /**
     * An optional limit on the number of times this payment link can be used. 
     *
     *
     * **For payouts, `maxUses` is always 1.**
     *
     * @var ?int $maxUses
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('maxUses')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $maxUses = null;

    /**
     * An optional expiration date for this payment link.
     *
     * @var ?\DateTime $expiresOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expiresOn')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $expiresOn = null;

    /**
     *
     * @var ?PaymentLinkCustomerOptions $customer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\PaymentLinkCustomerOptions|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PaymentLinkCustomerOptions $customer = null;

    /**
     * Options for payment links used to collect payment.
     *
     * @var ?PaymentLinkPaymentDetails $payment
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\PaymentLinkPaymentDetails|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PaymentLinkPaymentDetails $payment = null;

    /**
     *
     * @var ?PaymentLinkPayoutDetails $payout
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payout')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\PaymentLinkPayoutDetails|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PaymentLinkPayoutDetails $payout = null;

    /**
     * @param  string  $partnerAccountID
     * @param  string  $merchantPaymentMethodID
     * @param  Amount  $amount
     * @param  PaymentLinkDisplayOptions  $display
     * @param  ?int  $maxUses
     * @param  ?\DateTime  $expiresOn
     * @param  ?PaymentLinkCustomerOptions  $customer
     * @param  ?PaymentLinkPaymentDetails  $payment
     * @param  ?PaymentLinkPayoutDetails  $payout
     * @phpstan-pure
     */
    public function __construct(string $partnerAccountID, string $merchantPaymentMethodID, Amount $amount, PaymentLinkDisplayOptions $display, ?int $maxUses = null, ?\DateTime $expiresOn = null, ?PaymentLinkCustomerOptions $customer = null, ?PaymentLinkPaymentDetails $payment = null, ?PaymentLinkPayoutDetails $payout = null)
    {
        $this->partnerAccountID = $partnerAccountID;
        $this->merchantPaymentMethodID = $merchantPaymentMethodID;
        $this->amount = $amount;
        $this->display = $display;
        $this->maxUses = $maxUses;
        $this->expiresOn = $expiresOn;
        $this->customer = $customer;
        $this->payment = $payment;
        $this->payout = $payout;
    }
}