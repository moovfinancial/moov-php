<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Components;


/**
 * PatchProfile - Describes the fields available when patching a profile.
 *
 * Each object can be patched independent of patching the other fields.
 */
class PatchProfile
{
    /**
     * Describes the fields available when patching an individual.
     *
     * @var ?PatchIndividual $individual
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('individual')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\PatchIndividual|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PatchIndividual $individual = null;

    /**
     *
     * @var ?PatchBusiness $business
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('business')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\PatchBusiness|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PatchBusiness $business = null;

    /**
     * @param  ?PatchIndividual  $individual
     * @param  ?PatchBusiness  $business
     * @phpstan-pure
     */
    public function __construct(?PatchIndividual $individual = null, ?PatchBusiness $business = null)
    {
        $this->individual = $individual;
        $this->business = $business;
    }
}