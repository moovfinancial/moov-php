<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Operations;

use Moov\OpenAPI\Models\Components;
use Moov\OpenAPI\Utils\SpeakeasyMetadata;
class GetScheduledOccurrenceRequest
{
    /**
     *
     * @var string $accountID
     */
    #[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=accountID')]
    public string $accountID;

    /**
     *
     * @var string $scheduleID
     */
    #[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=scheduleID')]
    public string $scheduleID;

    /**
     * Allows the specification of additional filters beyond the UUID.
     *
     *
     * Specifying a UUID string returns the exact occurrence.
     * Specifying a RFC 3339 timestamp returns the latest occurrence at or before that timestamp.
     * Specifying `latest` returns the latest occurrence at or before now.
     *
     * @var string $occurrenceFilter
     */
    #[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=occurrenceFilter')]
    public string $occurrenceFilter;

    /**
     * Specify an API version.
     *
     * @var ?Components\Versions $xMoovVersion
     */
    #[SpeakeasyMetadata('header:style=simple,explode=false,name=x-moov-version')]
    public ?Components\Versions $xMoovVersion = null;

    /**
     * @param  string  $accountID
     * @param  string  $scheduleID
     * @param  string  $occurrenceFilter
     * @param  ?Components\Versions  $xMoovVersion
     */
    public function __construct(string $accountID, string $scheduleID, string $occurrenceFilter, ?Components\Versions $xMoovVersion = null)
    {
        $this->accountID = $accountID;
        $this->scheduleID = $scheduleID;
        $this->occurrenceFilter = $occurrenceFilter;
        $this->xMoovVersion = $xMoovVersion;
    }
}