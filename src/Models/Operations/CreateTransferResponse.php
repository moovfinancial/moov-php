<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Operations;

use Moov\MoovPhp\Models\Components;
class CreateTransferResponse
{
    /**
     * HTTP response content type for this operation
     *
     * @var string $contentType
     */
    public string $contentType;

    /**
     * HTTP response status code for this operation
     *
     * @var int $statusCode
     */
    public int $statusCode;

    /**
     * Raw HTTP response; suitable for custom response parsing
     *
     * @var \Psr\Http\Message\ResponseInterface $rawResponse
     */
    public \Psr\Http\Message\ResponseInterface $rawResponse;

    /**
     * $headers
     *
     * @var array<string, array<string>> $headers
     */
    public array $headers;

    /**
     * The request completed successfully.
     *
     * @var Components\Transfer|Components\AsyncTransfer|null $transferResponse
     */
    public Components\Transfer|Components\AsyncTransfer|null $transferResponse = null;

    /**
     * A transfer was successfully created but an error occurred while generating the synchronous response. The asynchronous response object will be returned.
     *
     * @var ?Components\AsyncTransfer $asyncTransfer
     */
    public ?Components\AsyncTransfer $asyncTransfer = null;

    /**
     * A transfer was successfully created but a timeout occurred while waiting for a synchronous response. Rail-specific details may be missing from the response object.
     *
     * @var ?Components\Transfer $transfer
     */
    public ?Components\Transfer $transfer = null;

    /**
     * @param  string  $contentType
     * @param  int  $statusCode
     * @param  \Psr\Http\Message\ResponseInterface  $rawResponse
     * @param  array<string, array<string>>  $headers
     * @param  Components\Transfer|Components\AsyncTransfer|null  $transferResponse
     * @param  ?Components\AsyncTransfer  $asyncTransfer
     * @param  ?Components\Transfer  $transfer
     * @phpstan-pure
     */
    public function __construct(string $contentType, int $statusCode, \Psr\Http\Message\ResponseInterface $rawResponse, Components\Transfer|Components\AsyncTransfer|null $transferResponse = null, ?Components\AsyncTransfer $asyncTransfer = null, ?Components\Transfer $transfer = null, ?array $headers = [])
    {
        $this->contentType = $contentType;
        $this->statusCode = $statusCode;
        $this->rawResponse = $rawResponse;
        $this->headers = $headers;
        $this->transferResponse = $transferResponse;
        $this->asyncTransfer = $asyncTransfer;
        $this->transfer = $transfer;
    }
}