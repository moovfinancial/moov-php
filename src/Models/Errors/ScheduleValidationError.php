<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Errors;

use Moov\OpenAPI\Utils;
class ScheduleValidationError
{
    /**
     * $occurrences
     *
     * @var ?array<string, string> $occurrences
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('occurrences')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $occurrences = null;

    /**
     *
     * @var ?string $recur
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('recur')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $recur = null;

    /**
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * @param  ?array<string, string>  $occurrences
     * @param  ?string  $recur
     * @param  ?string  $description
     * @phpstan-pure
     */
    public function __construct(?array $occurrences = null, ?string $recur = null, ?string $description = null)
    {
        $this->occurrences = $occurrences;
        $this->recur = $recur;
        $this->description = $description;
    }

    public function toException(): ScheduleValidationErrorThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new ScheduleValidationErrorThrowable($message, (int) $code, $this);
    }
}