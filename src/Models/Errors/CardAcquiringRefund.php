<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Errors;

use Moov\OpenAPI\Models\Components;
use Moov\OpenAPI\Utils;
/** CardAcquiringRefund - Details of a card refund. */
class CardAcquiringRefund
{
    /**
     * Identifier for the refund.
     *
     * @var string $refundID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refundID')]
    public string $refundID;

    /**
     *
     * @var \DateTime $createdOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdOn')]
    public \DateTime $createdOn;

    /**
     *
     * @var \DateTime $updatedOn
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updatedOn')]
    public \DateTime $updatedOn;

    /**
     *
     * @var Components\RefundStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\RefundStatus')]
    public Components\RefundStatus $status;

    /**
     *
     * @var Components\Amount $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\Amount')]
    public Components\Amount $amount;

    /**
     *
     * @var ?Components\RefundCardDetails $cardDetails
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cardDetails')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\RefundCardDetails|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\RefundCardDetails $cardDetails = null;

    /**
     * @param  string  $refundID
     * @param  \DateTime  $createdOn
     * @param  \DateTime  $updatedOn
     * @param  Components\RefundStatus  $status
     * @param  Components\Amount  $amount
     * @param  ?Components\RefundCardDetails  $cardDetails
     * @phpstan-pure
     */
    public function __construct(string $refundID, \DateTime $createdOn, \DateTime $updatedOn, Components\RefundStatus $status, Components\Amount $amount, ?Components\RefundCardDetails $cardDetails = null)
    {
        $this->refundID = $refundID;
        $this->createdOn = $createdOn;
        $this->updatedOn = $updatedOn;
        $this->status = $status;
        $this->amount = $amount;
        $this->cardDetails = $cardDetails;
    }

    public function toException(): CardAcquiringRefundThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new CardAcquiringRefundThrowable($message, (int) $code, $this);
    }
}