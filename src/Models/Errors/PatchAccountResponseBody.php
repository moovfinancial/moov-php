<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Errors;

use Moov\OpenAPI\Models\Components;
use Moov\OpenAPI\Utils;
/** PatchAccountResponseBody - The request was well-formed, but the contents failed validation. Check the request for missing or invalid fields. */
class PatchAccountResponseBody
{
    /**
     *
     * @var Components\PatchAccountError $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\OpenAPI\Models\Components\PatchAccountError')]
    public Components\PatchAccountError $error;

    /**
     * Raw HTTP response; suitable for custom response parsing
     *
     * @var ?\Psr\Http\Message\ResponseInterface $rawResponse
     */
    #[\Speakeasy\Serializer\Annotation\Exclude]

    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;

    /**
     * @param  Components\PatchAccountError  $error
     * @param  ?\Psr\Http\Message\ResponseInterface  $rawResponse
     */
    public function __construct(Components\PatchAccountError $error, ?\Psr\Http\Message\ResponseInterface $rawResponse = null)
    {
        $this->error = $error;
        $this->rawResponse = $rawResponse;
    }

    public function toException(): PatchAccountResponseBodyThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new PatchAccountResponseBodyThrowable($message, (int) $code, $this);
    }
}