<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\OpenAPI\Models\Errors;

use Moov\OpenAPI\Utils;
class BankAccountValidationError
{
    /**
     *
     * @var ?string $account
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('account')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $account = null;

    /**
     *
     * @var ?string $plaid
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('plaid')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $plaid = null;

    /**
     *
     * @var ?string $plaidLink
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('plaidLink')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $plaidLink = null;

    /**
     *
     * @var ?string $mx
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('mx')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $mx = null;

    /**
     *
     * @var ?string $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $error = null;

    /**
     * @param  ?string  $account
     * @param  ?string  $plaid
     * @param  ?string  $plaidLink
     * @param  ?string  $mx
     * @param  ?string  $error
     * @phpstan-pure
     */
    public function __construct(?string $account = null, ?string $plaid = null, ?string $plaidLink = null, ?string $mx = null, ?string $error = null)
    {
        $this->account = $account;
        $this->plaid = $plaid;
        $this->plaidLink = $plaidLink;
        $this->mx = $mx;
        $this->error = $error;
    }

    public function toException(): BankAccountValidationErrorThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new BankAccountValidationErrorThrowable($message, (int) $code, $this);
    }
}