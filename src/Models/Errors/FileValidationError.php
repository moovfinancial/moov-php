<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Errors;

use Moov\MoovPhp\Utils;
class FileValidationError
{
    /**
     *
     * @var ?string $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $error = null;

    /**
     *
     * @var ?string $file
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('file')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $file = null;

    /**
     *
     * @var ?string $filePurpose
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('filePurpose')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $filePurpose = null;

    /**
     *
     * @var ?string $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $metadata = null;

    /**
     * @param  ?string  $error
     * @param  ?string  $file
     * @param  ?string  $filePurpose
     * @param  ?string  $metadata
     * @phpstan-pure
     */
    public function __construct(?string $error = null, ?string $file = null, ?string $filePurpose = null, ?string $metadata = null)
    {
        $this->error = $error;
        $this->file = $file;
        $this->filePurpose = $filePurpose;
        $this->metadata = $metadata;
    }

    public function toException(): FileValidationErrorThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new FileValidationErrorThrowable($message, (int) $code, $this);
    }
}