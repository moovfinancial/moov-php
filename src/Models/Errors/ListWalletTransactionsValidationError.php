<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Errors;

use Moov\MoovPhp\Utils;
class ListWalletTransactionsValidationError
{
    /**
     *
     * @var ?string $transactionType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transactionType')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $transactionType = null;

    /**
     *
     * @var ?string $transactionTypes
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transactionTypes')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $transactionTypes = null;

    /**
     *
     * @var ?string $sourceType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sourceType')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $sourceType = null;

    /**
     *
     * @var ?string $sourceID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sourceID')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $sourceID = null;

    /**
     *
     * @var ?string $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $status = null;

    /**
     *
     * @var ?string $sweepID
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sweepID')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $sweepID = null;

    /**
     *
     * @var ?string $createdStartDateTime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdStartDateTime')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $createdStartDateTime = null;

    /**
     *
     * @var ?string $createdEndDateTime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdEndDateTime')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $createdEndDateTime = null;

    /**
     *
     * @var ?string $completedStartDateTime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('completedStartDateTime')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $completedStartDateTime = null;

    /**
     *
     * @var ?string $completedEndDateTime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('completedEndDateTime')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $completedEndDateTime = null;

    /**
     *
     * @var ?string $statementDescriptor
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('statementDescriptor')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $statementDescriptor = null;

    /**
     *
     * @var ?string $skip
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('skip')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $skip = null;

    /**
     *
     * @var ?string $count
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('count')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $count = null;

    /**
     * @param  ?string  $transactionType
     * @param  ?string  $transactionTypes
     * @param  ?string  $sourceType
     * @param  ?string  $sourceID
     * @param  ?string  $status
     * @param  ?string  $sweepID
     * @param  ?string  $createdStartDateTime
     * @param  ?string  $createdEndDateTime
     * @param  ?string  $completedStartDateTime
     * @param  ?string  $completedEndDateTime
     * @param  ?string  $statementDescriptor
     * @param  ?string  $skip
     * @param  ?string  $count
     * @phpstan-pure
     */
    public function __construct(?string $transactionType = null, ?string $transactionTypes = null, ?string $sourceType = null, ?string $sourceID = null, ?string $status = null, ?string $sweepID = null, ?string $createdStartDateTime = null, ?string $createdEndDateTime = null, ?string $completedStartDateTime = null, ?string $completedEndDateTime = null, ?string $statementDescriptor = null, ?string $skip = null, ?string $count = null)
    {
        $this->transactionType = $transactionType;
        $this->transactionTypes = $transactionTypes;
        $this->sourceType = $sourceType;
        $this->sourceID = $sourceID;
        $this->status = $status;
        $this->sweepID = $sweepID;
        $this->createdStartDateTime = $createdStartDateTime;
        $this->createdEndDateTime = $createdEndDateTime;
        $this->completedStartDateTime = $completedStartDateTime;
        $this->completedEndDateTime = $completedEndDateTime;
        $this->statementDescriptor = $statementDescriptor;
        $this->skip = $skip;
        $this->count = $count;
    }

    public function toException(): ListWalletTransactionsValidationErrorThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new ListWalletTransactionsValidationErrorThrowable($message, (int) $code, $this);
    }
}