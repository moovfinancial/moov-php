<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Moov\MoovPhp\Models\Errors;

use Moov\MoovPhp\Models\Components;
use Moov\MoovPhp\Utils;
class UpsertUnderwritingError
{
    /**
     *
     * @var ?string $geographicReach
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('geographicReach')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $geographicReach = null;

    /**
     *
     * @var ?string $businessPresence
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('businessPresence')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $businessPresence = null;

    /**
     *
     * @var ?string $pendingLitigation
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('pendingLitigation')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $pendingLitigation = null;

    /**
     *
     * @var ?Components\VolumeShareByCustomerTypeError $volumeShareByCustomerType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('volumeShareByCustomerType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\VolumeShareByCustomerTypeError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\VolumeShareByCustomerTypeError $volumeShareByCustomerType = null;

    /**
     *
     * @var ?Components\CollectFundsError $collectFunds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('collectFunds')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\CollectFundsError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\CollectFundsError $collectFunds = null;

    /**
     *
     * @var ?Components\MoneyTransferError $moneyTransfer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('moneyTransfer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\MoneyTransferError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\MoneyTransferError $moneyTransfer = null;

    /**
     *
     * @var ?Components\SendFundsError $sendFunds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sendFunds')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\SendFundsError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\SendFundsError $sendFunds = null;

    /**
     *
     * @var ?string $averageMonthlyTransactionVolume
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('averageMonthlyTransactionVolume')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $averageMonthlyTransactionVolume = null;

    /**
     *
     * @var ?string $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $error = null;

    /**
     *
     * @var ?string $averageTransactionSize
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('averageTransactionSize')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $averageTransactionSize = null;

    /**
     *
     * @var ?string $maxTransactionSize
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('maxTransactionSize')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $maxTransactionSize = null;

    /**
     *
     * @var ?Components\VolumeByCustomerTypeError $volumeByCustomerType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('volumeByCustomerType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\VolumeByCustomerTypeError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\VolumeByCustomerTypeError $volumeByCustomerType = null;

    /**
     *
     * @var ?Components\CardVolumeDistributionError $cardVolumeDistribution
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cardVolumeDistribution')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\CardVolumeDistributionError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\CardVolumeDistributionError $cardVolumeDistribution = null;

    /**
     *
     * @var ?Components\FulfillmentDetailsError $fulfillment
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('fulfillment')]
    #[\Speakeasy\Serializer\Annotation\Type('\Moov\MoovPhp\Models\Components\FulfillmentDetailsError|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Components\FulfillmentDetailsError $fulfillment = null;

    /**
     * @param  ?string  $geographicReach
     * @param  ?string  $businessPresence
     * @param  ?string  $pendingLitigation
     * @param  ?Components\VolumeShareByCustomerTypeError  $volumeShareByCustomerType
     * @param  ?Components\CollectFundsError  $collectFunds
     * @param  ?Components\MoneyTransferError  $moneyTransfer
     * @param  ?Components\SendFundsError  $sendFunds
     * @param  ?string  $averageMonthlyTransactionVolume
     * @param  ?string  $error
     * @param  ?string  $averageTransactionSize
     * @param  ?string  $maxTransactionSize
     * @param  ?Components\VolumeByCustomerTypeError  $volumeByCustomerType
     * @param  ?Components\CardVolumeDistributionError  $cardVolumeDistribution
     * @param  ?Components\FulfillmentDetailsError  $fulfillment
     * @phpstan-pure
     */
    public function __construct(?string $geographicReach = null, ?string $businessPresence = null, ?string $pendingLitigation = null, ?Components\VolumeShareByCustomerTypeError $volumeShareByCustomerType = null, ?Components\CollectFundsError $collectFunds = null, ?Components\MoneyTransferError $moneyTransfer = null, ?Components\SendFundsError $sendFunds = null, ?string $averageMonthlyTransactionVolume = null, ?string $error = null, ?string $averageTransactionSize = null, ?string $maxTransactionSize = null, ?Components\VolumeByCustomerTypeError $volumeByCustomerType = null, ?Components\CardVolumeDistributionError $cardVolumeDistribution = null, ?Components\FulfillmentDetailsError $fulfillment = null)
    {
        $this->geographicReach = $geographicReach;
        $this->businessPresence = $businessPresence;
        $this->pendingLitigation = $pendingLitigation;
        $this->volumeShareByCustomerType = $volumeShareByCustomerType;
        $this->collectFunds = $collectFunds;
        $this->moneyTransfer = $moneyTransfer;
        $this->sendFunds = $sendFunds;
        $this->averageMonthlyTransactionVolume = $averageMonthlyTransactionVolume;
        $this->error = $error;
        $this->averageTransactionSize = $averageTransactionSize;
        $this->maxTransactionSize = $maxTransactionSize;
        $this->volumeByCustomerType = $volumeByCustomerType;
        $this->cardVolumeDistribution = $cardVolumeDistribution;
        $this->fulfillment = $fulfillment;
    }

    public function toException(): UpsertUnderwritingErrorThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new UpsertUnderwritingErrorThrowable($message, (int) $code, $this);
    }
}